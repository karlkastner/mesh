% Tue Jul 22 16:38:54 WIB 2014
% Karl Kastner, Berlin
%
function [varargout, obj] = binop(obj,idfield,fun,val,varargin)
	switch (nargout)
	case {1}
		switch(length(varargin))
		case {1}
			valo1 = arrayfun(@(id) func(varargin{1}(id.id)), obj.id);
		case {2}
			valo1 = arrayfun(@(id) func(varargin{1}(id.id),varargin{2}(id.id)), obj.id);
		otherwise
			error('not yet implemented');
		end
		valo1 = cell2mat(cellfun(@(x) shiftdim(rvec(x),-1),valo1,'uniformoutput',false));
		varargout = {valo1, obj};
	case {2}
		switch(length(varargin))
		case {1}
			[valo1 valo2] = arrayfun(@(id) func(varargin{1}(id.id)), obj.id);
		case {2}
			[valo1 valo2] = arrayfun(@(id) func(     varargin{1}(id.id) ...
								,varargin{2}(id.id)) ...
								,obj.id,'Uniformoutput',false);
		case {3}
			[valo1 valo2] = arrayfun(@(id) func(     varargin{1}(id.id) ...
								,varargin{2}(id.id) ...
								,varargin{3}(id.id)) ...
								,obj.id,'Uniformoutput',false);
		case {4}
			[valo1 valo2] = arrayfun(@(id) func(     varargin{1}(id.id) ...
								,varargin{2}(id.id) ...
								,varargin{3}(id.id) ...
								,varargin{4}(id.id)) ...
								,obj.id,'Uniformoutput',false);
		case {5}
			[valo1 valo2] = arrayfun(@(id) func(     varargin{1}(id.id) ...
								,varargin{2}(id.id) ...
								,varargin{3}(id.id) ...
								,varargin{4}(id.id) ...
								,varargin{5}(id.id)) ...
								,obj.id,'Uniformoutput',false);
			% this assumes vector, e.g. non-matrix output
%			[valo1 valo2] = arrayfun(@(id) func(varargin{1}(id.id),varargin{2}(id.id)), obj.id);
		otherwise
			error('not yet implemented');
		end
		valo1 = cell2mat(cellfun(@(x) shiftdim(rvec(x),-1),valo1,'uniformoutput',false));
		valo2 = cell2mat(cellfun(@(x) shiftdim(rvec(x),-1),valo2,'uniformoutput',false));
		varargout = {valo1, valo2, obj};
	case {3}
		switch(length(varargin))
			case {1}
				[valo1 valo2 valo3] = arrayfun(@(id) func(varargin{1}(id.id)), obj.id);
			case {2}
				[valo1 valo2 valo3] = arrayfun(@(id) func(     varargin{1}(id.id) ...
									,varargin{2}(id.id)) ...
									,obj.id,'Uniformoutput',false);
			otherwise
		end
		valo1 = cell2mat(cellfun(@(x) shiftdim(rvec(x),-1),valo1,'uniformoutput',false));
		valo2 = cell2mat(cellfun(@(x) shiftdim(rvec(x),-1),valo2,'uniformoutput',false));
		valo3 = cell2mat(cellfun(@(x) shiftdim(rvec(x),-1),valo3,'uniformoutput',false));
		varargout = {valo1, valo2, valo3, obj};
	otherwise

		error('not yet implemented');
	end
end % binop

